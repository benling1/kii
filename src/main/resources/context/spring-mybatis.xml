<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:task="http://www.springframework.org/schema/task" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:repository="http://www.springframework.org/schema/data/repository"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd"
	default-lazy-init="false">

	<description>MyBatis配置，主要为了提供高效灵活的查询功能支持。http://mybatis.github.io/mybatis-3/zh/index.html</description>


    <!-- Multi-db vendor support -->
	<bean id="databaseIdProvider" class="org.apache.ibatis.mapping.VendorDatabaseIdProvider">
		<property name="properties">
			<bean class="org.springframework.beans.factory.config.PropertiesFactoryBean">
				<property name="properties">
					<props>
						<prop key="SQL Server">sqlserver</prop>
						<prop key="DB2">db2</prop>
						<prop key="Oracle">oracle</prop>
						<prop key="MySQL">mysql</prop>
						<prop key="H2">h2</prop>
					</props>
				</property>
			</bean>
		</property>
	</bean>  
	
	<!-- JACKSTRAW_YU -->
	<bean id="databaseIdProviderT" class="org.apache.ibatis.mapping.VendorDatabaseIdProvider">
		<property name="properties">
			<bean class="org.springframework.beans.factory.config.PropertiesFactoryBean">
				<property name="properties">
					<props>
						<prop key="SQL Server">sqlserver</prop>
						<prop key="DB2">db2</prop>
						<prop key="Oracle">oracle</prop>
						<prop key="MySQL">mysql</prop>
						<prop key="H2">h2</prop>
					</props>
				</property>
			</bean>
		</property>
	</bean>  
	<!-- JACKSTRAW_YU -->

	<!-- APP数据源配置 -->    <!-- jackstraw_yu  修改了一个多例 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"  >
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="dataSource" ref="dataSource" />
		<property name="databaseIdProvider" ref="databaseIdProvider" />  
		<!-- 显式指定Mapper文件位置 -->
		<property name="mapperLocations">
			<list>
				<value>classpath*:lab/s2jh/**/entity/*Mapper.xml</value>
				<value>classpath*:s2jh/biz/**/entity/*Mapper.xml</value>
				<value>classpath*:s2jh/biz/shop/crm/**/entity/*Mapper.xml</value>
			</list>
		</property>
	</bean>
	
	<!-- jackstraw_yu-->
	<bean id="sqlSessionFactoryT" class="org.mybatis.spring.SqlSessionFactoryBean"  >
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="dataSource" ref="dataSourceT" />
		<property name="databaseIdProvider" ref="databaseIdProviderT" />  
		<!-- 显式指定Mapper文件位置 -->
		<property name="mapperLocations">
			<list>
				<!-- <value>classpath*:lab/s2jh/**/entity/TbTradeMapper.xml</value> -->
				<!-- <value>classpath*:s2jh/biz/**/entity/*Mapper.xml</value> -->
				<value>classpath*:s2jh/biz/shop/crm/**/pojo/*Mapper.xml</value>
			</list>
		</property>
	</bean>
	<!-- jackstraw_yu-->

	<bean id="myBatisDao" name="myBatisDao" class="lab.s2jh.core.dao.mybatis.MyBatisGenerialDaoImpl" >
		<property name="sqlSession">
			<bean class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
				<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
			</bean>
		</property>
	</bean>
	
	<!-- JACKSTRAW_YU -->
	<bean id="myBatisDaoT" name="myBatisDaoT" class="lab.s2jh.core.dao.mybatis.MyBatisGenerialDaoImplT">
		<property name="sqlSession">
			<bean class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
				<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactoryT" />
			</bean>
		</property>
	</bean>
	<!-- JACKSTRAW_YU -->
	<!-- 扫描basePackage下所有以@MyBatisRepository标识的 接口
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="lab.s2jh.**.dao,s2jh.biz.**.dao" />
		<property name="annotationClass" value="lab.s2jh.core.dao.mybatis.MyBatisRepository" />
	</bean>
    -->
    
    <!-- mybatis的Mapper的扫描器 MapperScannerConfigure  会自动扫描  
         mapper包下的所有接口自动生成代理对象: 对象名字为Mapper接口类名(首字母小写)
         @author：jackstraw  
     -->  
<!--     <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">   -->
<!--         <property name="basePackage" value="s2jh.biz.shop.crm.tradecenter.dao"></property>   -->
<!--         <property name="basePackage" value="s2jh.biz.shop.crm.tradecenter.dao"></property> -->
<!--         注意这里是SqlSessionFactoryBeanName   -->
<!--         <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>   -->
<!--     </bean>   -->
	
		
		 
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="s2jh.biz.shop.crm.tradecenter.dao;s2jh.biz.shop.crm.goods.dao"></property>
        <!-- 注意这里是SqlSessionFactoryBeanName -->  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>
      
</beans>